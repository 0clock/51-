C51 COMPILER V9.60.0.0   OLED                                                              02/14/2022 12:41:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 0.96°ÆOLED-SPI\oled.c LARGE RTX51 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\0.96
                    -°ÆOLED-SPI;.\0.96°ÆOLED-SPI\BMP;.\USER;.\delay;.\∞¥º¸;.\BMEBMP280;.\IIC;.\GPS;.\SPI;.\–˝◊™±‡¬Î∆˜;.\1.54'TFT) DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          
   3          //  ÂäüËÉΩÊèèËø∞   : OLED 4Êé•Âè£ÊºîÁ§∫‰æãÁ®ã(51Á≥ªÂàó)
   4          //              ËØ¥Êòé: 
   5          //              ----------------------------------------------------------------
   6          //              GND    ÁîµÊ∫êÂú∞
   7          //              VCC  Êé•5VÊàñ3.3vÁîµÊ∫ê
   8          //              D0   P1^0ÔºàSCLÔºâ
   9          //              D1   P1^1ÔºàSDAÔºâ
  10          //              RES  Êé•P12
  11          //              DC   Êé•P13
  12          //              CS   Êé•P14               
  13          
  14          //******************************************************************************/„ÄÇ
  15          #include "oled.h"
  16          //#include "stdlib.h"
  17          #include "oledfont.h"    
  18          //#include "delay.h"
  19          //OLEDÁöÑÊòæÂ≠ò
  20          //Â≠òÊîæÊ†ºÂºèÂ¶Ç‰∏ã.
  21          //[0]0 1 2 3 ... 127  
  22          //[1]0 1 2 3 ... 127  
  23          //[2]0 1 2 3 ... 127  
  24          //[3]0 1 2 3 ... 127  
  25          //[4]0 1 2 3 ... 127  
  26          //[5]0 1 2 3 ... 127  
  27          //[6]0 1 2 3 ... 127  
  28          //[7]0 1 2 3 ... 127         
  29          void delay_ms(unsigned int ms)
  30          {                         
  31   1        unsigned int a;
  32   1        while(ms)
  33   1        {
  34   2          a=1800;
  35   2          while(a--);
  36   2          ms--;
  37   2        }
  38   1        return;
  39   1      }
  40          #if OLED_MODE==1
              //ÂêëSSD1106ÂÜôÂÖ•‰∏Ä‰∏™Â≠óËäÇ„ÄÇ
              //dat:Ë¶ÅÂÜôÂÖ•ÁöÑÊï∞ÊçÆ/ÂëΩ‰ª§
              //cmd:Êï∞ÊçÆ/ÂëΩ‰ª§Ê†áÂøó 0,Ë°®Á§∫ÂëΩ‰ª§;1,Ë°®Á§∫Êï∞ÊçÆ;
              void OLED_WR_Byte(uchar dat,uchar cmd)
              {
                DATAOUT(dat);     
                if(cmd)
                  OLED_DC_Set();
                else 
                  OLED_DC_Clr();       
                OLED_CS_Clr();
                OLED_WR_Clr();   
                OLED_WR_Set();
C51 COMPILER V9.60.0.0   OLED                                                              02/14/2022 12:41:39 PAGE 2   

                OLED_CS_Set();    
                OLED_DC_Set();   
              }             
              #else
  58          //ÂêëSSD1306ÂÜôÂÖ•‰∏Ä‰∏™Â≠óËäÇ„ÄÇ
  59          //dat:Ë¶ÅÂÜôÂÖ•ÁöÑÊï∞ÊçÆ/ÂëΩ‰ª§
  60          //cmd:Êï∞ÊçÆ/ÂëΩ‰ª§Ê†áÂøó 0,Ë°®Á§∫ÂëΩ‰ª§;1,Ë°®Á§∫Êï∞ÊçÆ;
  61          void OLED_WR_Byte(uchar dat,uchar cmd)
  62          { 
  63   1        uchar i;        
  64   1        if(cmd)
  65   1          OLED_DC_Set();
  66   1        else 
  67   1          OLED_DC_Clr();      
  68   1        OLED_CS_Clr();
  69   1        for(i=0;i<8;i++)
  70   1        {       
  71   2          OLED_SCLK_Clr();
  72   2          if(dat&0x80)
  73   2            {
  74   3             OLED_SDIN_Set();
  75   3            }
  76   2      else
  77   2             OLED_SDIN_Clr();
  78   2              OLED_SCLK_Set();
  79   2          dat<<=1;   
  80   2        }             
  81   1        OLED_CS_Set();
  82   1        OLED_DC_Set();      
  83   1      } 
  84          #endif
  85            void OLED_Set_Pos(unsigned char x, unsigned char y) 
  86          { 
  87   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
  88   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  89   1        OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
  90   1      }       
  91          //ÂºÄÂêØOLEDÊòæÁ§∫    
  92          void OLED_Display_On(void)
  93          {
  94   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDCÂëΩ‰ª§
  95   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
  96   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
  97   1      }
  98          //ÂÖ≥Èó≠OLEDÊòæÁ§∫     
  99          void OLED_Display_Off(void)
 100          {
 101   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDCÂëΩ‰ª§
 102   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 103   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 104   1      }            
 105          //Ê∏ÖÂ±èÂáΩÊï∞,Ê∏ÖÂÆåÂ±è,Êï¥‰∏™Â±èÂπïÊòØÈªëËâ≤ÁöÑ!ÂíåÊ≤°ÁÇπ‰∫Æ‰∏ÄÊ†∑!!!   
 106          void OLED_Clear(void)  
 107          {  
 108   1        uchar i,n;        
 109   1        for(i=0;i<8;i++)  
 110   1        {  
 111   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //ËÆæÁΩÆÈ°µÂú∞ÂùÄÔºà0~7Ôºâ
 112   2          OLED_WR_Byte (0x00,OLED_CMD);      //ËÆæÁΩÆÊòæÁ§∫‰ΩçÁΩÆ‚ÄîÂàó‰ΩéÂú∞ÂùÄ
 113   2          OLED_WR_Byte (0x10,OLED_CMD);      //ËÆæÁΩÆÊòæÁ§∫‰ΩçÁΩÆ‚ÄîÂàóÈ´òÂú∞ÂùÄ   
 114   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 115   2        } //Êõ¥Êñ∞ÊòæÁ§∫
C51 COMPILER V9.60.0.0   OLED                                                              02/14/2022 12:41:39 PAGE 3   

 116   1      }
 117          
 118          
 119          //Âú®ÊåáÂÆö‰ΩçÁΩÆÊòæÁ§∫‰∏Ä‰∏™Â≠óÁ¨¶,ÂåÖÊã¨ÈÉ®ÂàÜÂ≠óÁ¨¶
 120          //x:0~127
 121          //y:0~63
 122          //mode:0,ÂèçÁôΩÊòæÁ§∫;1,Ê≠£Â∏∏ÊòæÁ§∫         
 123          //size:ÈÄâÊã©Â≠ó‰Ωì 16/12 
 124          void OLED_ShowChar(uchar x,uchar y,uchar chr)
 125          {       
 126   1        unsigned char c=0,i=0;  
 127   1          c=chr-' ';//ÂæóÂà∞ÂÅèÁßªÂêéÁöÑÂÄº     
 128   1          if(x>Max_Column-1){x=0;y=y+2;}
 129   1          if(SIZE ==16)
 130   1            {
 131   2            OLED_Set_Pos(x,y);  
 132   2            for(i=0;i<8;i++)
 133   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 134   2            OLED_Set_Pos(x,y+1);
 135   2            for(i=0;i<8;i++)
 136   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 137   2            }
 138   1            else {  
 139   2            OLED_Set_Pos(x,y+1);
 140   2            for(i=0;i<6;i++)
 141   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 142   2            }
 143   1      }
 144          //m^nÂáΩÊï∞
 145          uint oled_pow(uchar m,uchar n)
 146          {
 147   1        uint result=1;   
 148   1        while(n--)result*=m;    
 149   1        return result;
 150   1      }         
 151          //ÊòæÁ§∫2‰∏™Êï∞Â≠ó
 152          //x,y :Ëµ∑ÁÇπÂùêÊ†á  
 153          //len :Êï∞Â≠óÁöÑ‰ΩçÊï∞
 154          //size:Â≠ó‰ΩìÂ§ßÂ∞è
 155          //mode:Ê®°Âºè 0,Â°´ÂÖÖÊ®°Âºè;1,Âè†Âä†Ê®°Âºè
 156          //num:Êï∞ÂÄº(0~4294967295);       
 157          void OLED_ShowNum(uchar x,uchar y,uint num,uchar len,uchar size2)
 158          {           
 159   1        uchar t,temp;
 160   1        uchar enshow=0;              
 161   1        for(t=0;t<len;t++)
 162   1        {
 163   2          temp=(num/oled_pow(10,len-t-1))%10;
 164   2          if(enshow==0&&t<(len-1))
 165   2          {
 166   3            if(temp==0)
 167   3            {
 168   4              OLED_ShowChar(x+(size2/2)*t,y,' ');
 169   4              continue;
 170   4            }else enshow=1; 
 171   3             
 172   3          }
 173   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0'); 
 174   2        }
 175   1      } 
 176          //ÊòæÁ§∫‰∏Ä‰∏™Â≠óÁ¨¶Âè∑‰∏≤
 177          void OLED_ShowString(uchar x,uchar y,uchar *chr)
C51 COMPILER V9.60.0.0   OLED                                                              02/14/2022 12:41:39 PAGE 4   

 178          {
 179   1        unsigned char j=0;
 180   1        while (chr[j]!='\0')
 181   1        {   OLED_ShowChar(x,y,chr[j]);
 182   2            x+=8;
 183   2          if(x>120){x=0;y+=2;}
 184   2            j++;
 185   2        }
 186   1      }
 187          //ÊòæÁ§∫Ê±âÂ≠ó
 188          void OLED_ShowCHinese(uchar x,uchar y,uchar no)
 189          {               
 190   1        uchar t,adder=0;
 191   1        OLED_Set_Pos(x,y);  
 192   1          for(t=0;t<16;t++)
 193   1          {
 194   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 195   2              adder+=1;
 196   2           }  
 197   1          OLED_Set_Pos(x,y+1);  
 198   1          for(t=0;t<16;t++)
 199   1            { 
 200   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 201   2              adder+=1;
 202   2            }         
 203   1      }
 204          /***********ÂäüËÉΩÊèèËø∞ÔºöÊòæÁ§∫ÊòæÁ§∫BMPÂõæÁâá128√ó64Ëµ∑ÂßãÁÇπÂùêÊ†á(x,y),xÁöÑËåÉÂõ¥0ÔΩû127Ôºåy‰∏∫È°µÁöÑ
             -ËåÉÂõ¥0ÔΩû7*****************/
 205          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 206          {   
 207   1       unsigned int j=0;
 208   1       unsigned char x,y;
 209   1        
 210   1        if(y1%8==0) y=y1/8;      
 211   1        else y=y1/8+1;
 212   1        for(y=y0;y<y1;y++)
 213   1        {
 214   2          OLED_Set_Pos(x0,y);
 215   2          for(x=x0;x<x1;x++)
 216   2            {      
 217   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 218   3            }
 219   2        }
 220   1      } 
 221          
 222          
 223          //ÂàùÂßãÂåñSSD1306              
 224          void OLED_Init(void)
 225          {
 226   1       
 227   1      
 228   1       
 229   1        OLED_RST_Set();
 230   1        delay_ms(100);
 231   1        OLED_RST_Clr();
 232   1        delay_ms(100);
 233   1        OLED_RST_Set(); 
 234   1        /*          
 235   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 236   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 237   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
C51 COMPILER V9.60.0.0   OLED                                                              02/14/2022 12:41:39 PAGE 5   

 238   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 239   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 240   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 241   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0Â∑¶Âè≥ÂèçÁΩÆ 0xa1Ê≠£Â∏∏
 242   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0‰∏ä‰∏ãÂèçÁΩÆ 0xc8Ê≠£Â∏∏
 243   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 244   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 245   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 246   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 247   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 248   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 249   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 250   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 251   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 252   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 253   1        OLED_WR_Byte(0x12,OLED_CMD);
 254   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 255   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 256   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 257   1        OLED_WR_Byte(0x02,OLED_CMD);//
 258   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 259   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 260   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 261   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 262   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 263   1        */
 264   1      
 265   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 266   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 267   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 268   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 269   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 270   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 271   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0Â∑¶Âè≥ÂèçÁΩÆ 0xa1Ê≠£Â∏∏
 272   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0‰∏ä‰∏ãÂèçÁΩÆ 0xc8Ê≠£Â∏∏
 273   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 274   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 275   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 276   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 277   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 278   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 279   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 280   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 281   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 282   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 283   1        OLED_WR_Byte(0x12,OLED_CMD);
 284   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 285   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 286   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 287   1        OLED_WR_Byte(0x02,OLED_CMD);//
 288   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 289   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 290   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 291   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 292   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 293   1        
 294   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 295   1        OLED_Clear();
 296   1        OLED_Set_Pos(0,0);  
 297   1      }  
 298          
*** WARNING C294 IN LINE 131 OF 0.96°ÆOLED-SPI\oled.c: unreachable code
C51 COMPILER V9.60.0.0   OLED                                                              02/14/2022 12:41:39 PAGE 6   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    979    ----
   CONSTANT SIZE    =   2776    ----
   XDATA SIZE       =   ----      27
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
