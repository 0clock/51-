C51 COMPILER V9.60.0.0   MPU6050                                                           04/21/2023 13:03:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MPU6050
OBJECT MODULE PLACED IN .\OBJ\mpu6050.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Library\src\mpu6050.c LARGE OMF2 WARNINGLEVEL(1) OPTIMIZE(8,SPEED) INCDI
                    -R(.\Library\inc;.\USER) PRINT(.\mpu6050.lst) TABS(2) OBJECT(.\OBJ\mpu6050.obj)

line level    source

   1          //
   2          // Created by Jay on 2022/6/11.
   3          //
   4          
   5          #include "mpu6050.h"
   6          void  SeriPushSend(uchar send_data)
   7          {
   8   1          SBUF=send_data;
   9   1          while(!TI);TI=0;
  10   1      }
  11          //****************************************
  12          //延时
  13          //****************************************
  14          /*void delay(unsigned int k)
  15          {
  16              unsigned int i,j;
  17              for(i=0;i<k;i++)
  18              {
  19                  for(j=0;j<121;j++);
  20              }
  21          }*/
  22          
  23          //**************************************
  24          //延时5微秒(STC90C52RC@12M)
  25          //不同的工作环境,需要调整此函数
  26          //当改用1T的MCU时,请调整此延时函数
  27          //**************************************
  28          
  29          //**************************************
  30          //I2C起始信号
  31          //**************************************
  32          void I2C_Start()
  33          {
  34   1          SDA = 1;                    //拉高数据线
  35   1          SCL = 1;                    //拉高时钟线
  36   1          Delay_Us(5);                 //延时
  37   1          SDA = 0;                    //产生下降沿
  38   1          Delay_Us(5);                //延时
  39   1          SCL = 0;                    //拉低时钟线
  40   1      }
  41          //**************************************
  42          //I2C停止信号
  43          //**************************************
  44          void I2C_Stop()
  45          {
  46   1          SDA = 0;                    //拉低数据线
  47   1          SCL = 1;                    //拉高时钟线
  48   1          Delay_Us(5);                 //延时
  49   1          SDA = 1;                    //产生上升沿
  50   1          Delay_Us(5);                 //延时
  51   1      }
  52          //**************************************
  53          //I2C发送应答信号
  54          //入口参数:ack (0:ACK 1:NAK)
C51 COMPILER V9.60.0.0   MPU6050                                                           04/21/2023 13:03:52 PAGE 2   

  55          //**************************************
  56          void I2C_SendACK(bit ack)
  57          {
  58   1          SDA = ack;                  //写应答信号
  59   1          SCL = 1;                    //拉高时钟线
  60   1          Delay_Us(5);                 //延时
  61   1          SCL = 0;                    //拉低时钟线
  62   1          Delay_Us(5);                  //延时
  63   1      }
  64          //**************************************
  65          //I2C接收应答信号
  66          //**************************************
  67          bit I2C_RecvACK()
  68          {
  69   1          SCL = 1;                    //拉高时钟线
  70   1          Delay_Us(5);                  //延时
  71   1          CY = SDA;                   //读应答信号
  72   1          SCL = 0;                    //拉低时钟线
  73   1          Delay_Us(5);                  //延时
  74   1          return CY;
  75   1      }
  76          //**************************************
  77          //向I2C总线发送一个字节数据
  78          //**************************************
  79          void I2C_SendByte(uchar dat)
  80          {
  81   1          uchar i;
  82   1          for (i=0; i<8; i++)         //8位计数器
  83   1          {
  84   2              dat <<= 1;              //移出数据的最高位
  85   2              SDA = CY;               //送数据口
  86   2              SCL = 1;                //拉高时钟线
  87   2              Delay_Us(5);              //延时
  88   2              SCL = 0;                //拉低时钟线
  89   2              Delay_Us(5);             //延时
  90   2          }
  91   1          I2C_RecvACK();
  92   1      }
  93          //**************************************
  94          //从I2C总线接收一个字节数据
  95          //**************************************
  96          uchar I2C_RecvByte()
  97          {
  98   1          uchar i;
  99   1          uchar dat = 0;
 100   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 101   1          for (i=0; i<8; i++)         //8位计数器
 102   1          {
 103   2              dat <<= 1;
 104   2              SCL = 1;                //拉高时钟线
 105   2              Delay_Us(5);              //延时
 106   2              dat |= SDA;             //读数据
 107   2              SCL = 0;                //拉低时钟线
 108   2              Delay_Us(5);              //延时
 109   2          }
 110   1          return dat;
 111   1      }
 112          //**************************************
 113          //向I2C设备写入一个字节数据
 114          //**************************************
 115          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
 116          {
C51 COMPILER V9.60.0.0   MPU6050                                                           04/21/2023 13:03:52 PAGE 3   

 117   1          I2C_Start();                  //起始信号
 118   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 119   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
 120   1          I2C_SendByte(REG_data);       //内部寄存器数据，
 121   1          I2C_Stop();                   //发送停止信号
 122   1      }
 123          //**************************************
 124          //从I2C设备读取一个字节数据
 125          //**************************************
 126          uchar Single_ReadI2C(uchar REG_Address)
 127          {
 128   1          uchar REG_data;
 129   1          I2C_Start();                   //起始信号
 130   1          I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 131   1          I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始
 132   1          I2C_Start();                   //起始信号
 133   1          I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 134   1          REG_data=I2C_RecvByte();       //读出寄存器数据
 135   1          I2C_SendACK(1);                //接收应答信号
 136   1          I2C_Stop();                    //停止信号
 137   1          return REG_data;
 138   1      }
 139          //**************************************
 140          //初始化MPU6050
 141          //**************************************
 142          void InitMPU6050()
 143          {
 144   1          Single_WriteI2C(PWR_MGMT_1, 0x00);  //解除休眠状态
 145   1          Single_WriteI2C(SMPLRT_DIV, 0x07);
 146   1          Single_WriteI2C(CONFIG, 0x06);
 147   1          Single_WriteI2C(GYRO_CONFIG, 0x18);
 148   1          Single_WriteI2C(ACCEL_CONFIG, 0x01);
 149   1      }
 150          //**************************************
 151          //合成数据
 152          //**************************************
 153          int GetData(uchar REG_Address)
 154          {
 155   1          uchar H,L;
 156   1          H=Single_ReadI2C(REG_Address);
 157   1          L=Single_ReadI2C(REG_Address+1);
 158   1          return (H<<8)+L;   //合成数据
 159   1      }
 160          
 161          
 162          /*void init_uart()
 163          {
 164              TMOD=0x21;
 165              TH1=0xfd;
 166              TL1=0xfd;
 167          
 168              SCON=0x50;
 169              PS=1;      //串口中断设为高优先级别
 170              TR0=1;     //启动定时器
 171              TR1=1;
 172              ET0=1;     //打开定时器0中断
 173              ES=1;
 174              EA=1;
 175          }*/
 176          
 177          //*********************************************************
 178          //主程序
C51 COMPILER V9.60.0.0   MPU6050                                                           04/21/2023 13:03:52 PAGE 4   

 179          //*********************************************************
 180          /*
 181          void main()
 182          {
 183              delay(500);   //上电延时
 184          //  InitLcd();    //液晶初始化
 185              init_uart();
 186              InitMPU6050();  //初始化MPU6050
 187              delay(150);
 188              while(1)
 189              {
 190          
 191                  Display10BitData(GetData(ACCEL_XOUT_H),2,0);  //显示X轴加速度
 192                  Display10BitData(GetData(ACCEL_YOUT_H),7,0);  //显示Y轴加速度
 193                  Display10BitData(GetData(ACCEL_ZOUT_H),12,0); //显示Z轴加速度
 194                  Display10BitData(GetData(GYRO_XOUT_H),2,1); //显示X轴角速度
 195                  Display10BitData(GetData(GYRO_YOUT_H),7,1); //显示Y轴角速度
 196                  Display10BitData(GetData(GYRO_ZOUT_H),12,1);  //显示Z轴角速度
 197          
 198                  SeriPushSend(0x0d);
 199                  SeriPushSend(0x0a);//换行，回车
 200                  delay(100);
 201              }
 202          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    361    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
