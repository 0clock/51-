C51 COMPILER V9.60.7.0   PCF8591                                                           04/21/2023 17:04:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PCF8591
OBJECT MODULE PLACED IN .\OBJ\PCF8591.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Library\src\PCF8591.c LARGE OMF2 WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWS
                    -E INCDIR(.\Library\inc;.\USER) PRINT(.\PCF8591.lst) TABS(2) OBJECT(.\OBJ\PCF8591.obj)

line level    source

   1          /***************************************************************************************************    
   2          
   3          维护记录：  2011-8-22
   4          ***************************************************************************************************/
   5          
   6          #include "PCF8591.h"
   7          
   8          
   9          //**************************************************************************************************
  10          //启动(SCL为高，SDA由高变为低是一个开始条件)
  11          //**************************************************************************************************
  12          void PCF8591_start()  
  13          { 
  14   1        PCF8591_sda=1; _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();   //数据线置高,
  15   1        PCF8591_scl=1; _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();   //时钟线置高
  16   1        PCF8591_sda=0; _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();   //数据线置低,由高变低
  17   1        PCF8591_scl=0; _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();   //时钟线置低,准备发送或
             -接收数据,总线进入忙状态(I2C总线在空闲状态时，SDA与SCL均被置高)
  18   1        Delay_Us(1);  //延时
  19   1      }
  20          //**************************************************************************************************
  21          //停止（SCL为高，SDA由低变为高是一个结束条件）
  22          //**************************************************************************************************
  23          void PCF8591_stop()   
  24          {
  25   1        PCF8591_sda=0;                   //数据线置低
  26   1        Delay_Us(1);                 //延时
  27   1        PCF8591_scl=1;                   //时钟线置高
  28   1        Delay_Us(1);                 //延时
  29   1        PCF8591_sda=1;                   //数据线置高，由低变高
  30   1        Delay_Us(1);                 //延时
  31   1      }
  32          //**************************************************************************************************
  33          //检测应答(所有的地址和数据字都是以8bit,在第9个时钟周期，从器件发出"0"信号来作为收到一个字的应答信号)
  34          //**************************************************************************************************
  35          void PCF8591_checkACK()                   //主器件检测从器件是否返回应答
  36          {
  37   1        PCF8591_scl=1;                        //时钟线置高
  38   1        Delay_Us(1);                      //延时
  39   1        while(PCF8591_sda==1);                //等待第9个时钟周期器件发出的响应信号"0"
  40   1        PCF8591_scl=0;                        //时钟线置低
  41   1        Delay_Us(1);                      //延时
  42   1      }
  43          //**************************************************************************************************
  44          //发送应答(发送方为主器件，接收方为从器件，控制器作为从器件接收完1数据时，发送应答信号
  45          //**************************************************************************************************
  46          void PCF8591_sendACK(bit ACK)                   
  47          {
  48   1          if(ACK) PCF8591_sda=1;            //如果i位为1则发送1,即发送"非应答信号"
  49   1            else PCF8591_sda=0;            //如果i位为0则发送0,即发送"应答信号" 
  50   1          PCF8591_scl=1;                   //时钟线置高,给一个脉冲
  51   1        Delay_Us(1);                 //延时
  52   1        PCF8591_scl=0;                   //时钟线置低
  53   1        Delay_Us(1);                 //延时
C51 COMPILER V9.60.7.0   PCF8591                                                           04/21/2023 17:04:02 PAGE 2   

  54   1      }
  55          //**************************************************************************************************
  56          //写一字节
  57          //**************************************************************************************************
  58          void PCF8591_send_byte(uchar date)       //写一个8位字
  59          {
  60   1        uchar i,temp;                //定义局部变量
  61   1        temp=date;                   //待发8位数据赋予temp
  62   1        for(i=0;i<8;i++)             //循环8次，每次写入1位，从最高位开始发送
  63   1        {
  64   2              if(temp&0x80) PCF8591_sda=1;      //如果temp最高位为1则发送1
  65   2                else   PCF8591_sda=0;            //如果temp最高位为0则发送0
  66   2            _nop_();                 //延时
  67   2          PCF8591_scl=1;                   //给一个脉冲，发送sda当前这位数据
  68   2          Delay_Us(5);                 //延时,需大于4us(参考数据手册时序图) 
  69   2                      
  70   2          PCF8591_scl=0;                   //时钟线置低,准备下一脉冲
  71   2            Delay_Us(6);                 //延时,需大于4.7us(参考数据手册时序图) 
  72   2        
  73   2          temp=temp<<1;            //左移1位，准备好下1位待发送的数据
  74   2        }
  75   1        PCF8591_checkACK();                  //查询是否返回应答信号
  76   1      }
  77          //**************************************************************************************************
  78          //读一字节
  79          //**************************************************************************************************
  80           uchar PCF8591_receive_byte()         //读一个8位字
  81          {
  82   1        uchar i,temp;            //定义局部变量
  83   1        PCF8591_sda=1;                   //设置数据线为输入
  84   1        _nop_();                 //延时
  85   1        for(i=0;i<8;i++)         //循环8次，每次读取1位，从最高位开始接收
  86   1        {
  87   2          PCF8591_scl=1;               //给一脉冲，准备发送1位数据            
  88   2          Delay_Us(5);             //延时,需大于4us(参考数据手册时序图) 
  89   2      
  90   2          temp=(temp<<1)|PCF8591_sda;  //读取1位数据,放在temp最低位
  91   2          PCF8591_scl=0;               //准备给下1个脉冲
  92   2            Delay_Us(6);             //延时,需大于4.7us(参考数据手册时序图) 
  93   2             
  94   2        }
  95   1          PCF8591_sendACK(0);              //发送应答信号
  96   1        return temp;             //返回读取的8位数据
  97   1      }
  98          //**************************************************************************************************
  99          //读取AD转换结果数据
 100          //**************************************************************************************************
 101          uchar PCF8591_Read_AD(uchar chn)
 102           {
 103   1         uchar  ad_data;          //定义变量，存放转换结果
 104   1         PCF8591_stop();                  //停止 
 105   1         PCF8591_start();                 //启动总线
 106   1         PCF8591_send_byte(0x90);         //选择从器件地址,RW位为0，即选择写命令
 107   1         PCF8591_send_byte(0x40|chn);     //寄存器设置，0通道
 108   1         
 109   1         PCF8591_start();                 //启动I2C总线
 110   1         PCF8591_send_byte(0x91);         //选择从器件地址,RW位为1，即选择读命令
 111   1      
 112   1         ad_data=PCF8591_receive_byte();  //读取转换结果
 113   1         PCF8591_sendACK(1);              //发送非应答信号
 114   1         PCF8591_stop();                  //停止 
 115   1         return(ad_data);
C51 COMPILER V9.60.7.0   PCF8591                                                           04/21/2023 17:04:02 PAGE 3   

 116   1       }
 117          
 118          //**************************************************************************************************
 119          //DA转化函数
 120          //**************************************************************************************************
 121          void PCF8591_DAC(uchar v)
 122           {
 123   1         PCF8591_stop();                  //停止 
 124   1         PCF8591_start();                 //启动总线
 125   1         PCF8591_send_byte(0x90);         //选择从器件地址,RW位为0，即选择写命令
 126   1         PCF8591_send_byte(0x40);         //寄存器设置
 127   1         PCF8591_send_byte(v);         //写入数字量
 128   1         PCF8591_stop();                  //停止 
 129   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    313    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
