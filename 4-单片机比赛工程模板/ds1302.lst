C51 COMPILER V9.60.7.0   DS1302                                                            04/21/2023 17:04:01 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\OBJ\ds1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Library\src\ds1302.c LARGE OMF2 WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE
                    - INCDIR(.\Library\inc;.\USER) PRINT(.\ds1302.lst) TABS(2) OBJECT(.\OBJ\ds1302.obj)

line level    source

   1          #include"ds1302.h"  
   2          TIME_STRUCT  TIME =
   3            {
   4              0x00,   //秒   00~59
   5              0x10,   //分   00~59
   6              0x00,   //时   00-23
   7              0x10,   //日   00-31
   8              0x05,   //月   01-12
   9              0x05,   //星期 01-07
  10              0x19,   //年   00-99
  11            };
  12            //初始化时间参数
  13          
  14          uchar dtime[7][2]={     
  15                               {0x20,0x20}, //秒 十位和个位
  16                     {0x20,0x20}, //分 十位和个位
  17                     {0x20,0x20}, //时 十位和个位
  18                     {0x20,0x20}, //日 十位和个位
  19                     {0x20,0x20}, //月 十位和个位
  20                     {0x20,0x20}, //周 十位和个位
  21                     {0x20,0x20}  //年 十位和个位
  22                            };
  23          /******************************************************************** 
  24          //函数名称: DS1302_WByte
  25          //函数功能: 往DS1302 写入 1 Byte 数据
  26          //输入值:   ndata: 寄存器的数据或地址
  27          //返回值:   无
  28          ***********************************************************************/
  29            void DS1302_WByte(uchar ndata) 
  30          {  
  31   1        uchar i;
  32   1        for(i=8; i>0; i--)                   //循环8次写入8位数据
  33   1        {
  34   2          DS1302_IO = (bit)(ndata&0x01);     //取最低位数据，从0位至7位依次传送
  35   2          DS1302_SCLK = 1;                   //给一个脉冲，将数据写入1302                 
  36   2          _nop_();
  37   2          DS1302_SCLK = 0;                   
  38   2          ndata>>=1;                         //即ndata = ndata >> 1; 
  39   2        } 
  40   1      }
  41          /******************************************************************** 
  42          //函数名称: DS1302_RByte 
  43          //函数功能: 从DS1302读取 1 Byte数据
  44          //输入值:   无
  45          //返回值:   ndata:读取的数据
  46          ***********************************************************************/
  47            uchar DS1302_RByte(void) 
  48          { 
  49   1         uchar i;
  50   1         uchar ndata=0;
  51   1         for(i=8;i>0;i--)                 //循环8次读出8位数据 
  52   1        {
  53   2         DS1302_IO=1;                   //初始化数据IO
  54   2         ndata>>=1;               //即ndata = ndata >> 1; 
C51 COMPILER V9.60.7.0   DS1302                                                            04/21/2023 17:04:01 PAGE 2   

  55   2         if(DS1302_IO) ndata|=0x80;     //从数据口读取1位数据
  56   2           DS1302_SCLK = 1;               //给一个脉冲
  57   2           _nop_();
  58   2           DS1302_SCLK = 0;                     
  59   2      
  60   2         }
  61   1           return (ndata);                //返回结果
  62   1      }
  63          /******************************************************************** 
  64          //函数名称: DS1302_Wdata 
  65          //函数功能: 往DS1302某地址写入某数据
  66          //输入值:   nAddr: DS1302地址, ndata: 要写的数据
  67          //返回值:   无
  68          ***********************************************************************/
  69          void DS1302_Wdata(uchar nAddr, uchar ndata)
  70          {
  71   1        DS1302_RST=0;              
  72   1        DS1302_SCLK=0;
  73   1        DS1302_RST=1;
  74   1        DS1302_WByte(nAddr);       // 写1Byte地址
  75   1        DS1302_WByte(ndata);       // 写1Byte数据 
  76   1        DS1302_SCLK=1;
  77   1        DS1302_RST=0;
  78   1      } 
  79          /******************************************************************** 
  80          //函数名称: DS1302_Rdata 
  81          //函数功能: 从DS1302某地址读取数据
  82          //输入值:   nAddr: DS1302地址
  83          //返回值:   ndata: 读取的数据
  84          ***********************************************************************/
  85          uchar DS1302_Rdata(uchar nAddr)
  86          {
  87   1          uchar ndata;
  88   1        DS1302_RST=0;
  89   1        DS1302_SCLK=0;
  90   1        DS1302_RST=1;
  91   1          DS1302_WByte(nAddr);       /* 地址，命令 */
  92   1          ndata = DS1302_RByte();    /* 读1Byte数据 */
  93   1          DS1302_SCLK=1;
  94   1        DS1302_RST=0;
  95   1          return(ndata);
  96   1      }
  97          /******************************************************************** 
  98          //函数功能: DS1302初始时间设定
  99          ***********************************************************************/
 100          void InitDS1302(void)
 101          {
 102   1        DS1302_Wdata(0x8e,0x00); //控制命令,WP=0,写操作
 103   1        DS1302_Wdata(0x90,0xa5);  
 104   1        /*
 105   1        地址0x90为充电寄存器，可以对充电电流进行限制，写入
 106   1        内容高4位固定为1010（其他组合均不能充电），低4
 107   1        位的首2位是选择内部降压二极管的个数的，01代表在
 108   1        充电回路串入1个二极管，10代表串入2个；最后2位可
 109   1        设定串入的电阻的数值：01为2k欧，10为4k欧，11为8k欧。
 110   1        */
 111   1        DS1302_Wdata(0x80,TIME.SEC);  //秒
 112   1        DS1302_Wdata(0x82,TIME.MIN);  //分
 113   1        DS1302_Wdata(0x84,TIME.HR);   //时
 114   1        DS1302_Wdata(0x86,TIME.DATE); //日
 115   1        DS1302_Wdata(0x88,TIME.MONTH);//月
 116   1        DS1302_Wdata(0x8a,TIME.DAY);  //星期
C51 COMPILER V9.60.7.0   DS1302                                                            04/21/2023 17:04:01 PAGE 3   

 117   1        DS1302_Wdata(0x8c,TIME.YEAR); //年
 118   1        
 119   1        DS1302_Wdata(0x8e,0x80); //控制命令,WP=1,写保护
 120   1      }
 121          /******************************************************************** 
 122          //S1302当前时间读取
 123          ***********************************************************************/
 124          void GetDS1302(void)
 125          {
 126   1        TIME.SEC  = DS1302_Rdata(0x81);    //从DS1302读取秒数据
 127   1          dtime[0][0]=(TIME.SEC>>4)+0x30;      //十位
 128   1        dtime[0][1]=(TIME.SEC&0x0F)+0x30;    //个位   
 129   1      
 130   1        TIME.MIN  = DS1302_Rdata(0x83);    //从DS1302读取分数据
 131   1          dtime[1][0]=(TIME.MIN>>4)+0x30;      //十位  
 132   1        dtime[1][1]=(TIME.MIN&0x0F)+0x30;    //个位
 133   1      
 134   1        TIME.HR   = DS1302_Rdata(0x85);    //从DS1302读取时数据
 135   1          dtime[2][0]=(TIME.HR>>4)+0x30;       //十位  
 136   1        dtime[2][1]=(TIME.HR&0x0F)+0x30;     //个位
 137   1      
 138   1        TIME.DATE = DS1302_Rdata(0x87);    //从DS1302读取日数据
 139   1          dtime[3][0]=(TIME.DATE>>4)+0x30;     //十位  
 140   1        dtime[3][1]=(TIME.DATE&0x0F)+0x30;   //个位
 141   1      
 142   1        TIME.MONTH  = DS1302_Rdata(0x89);    //从DS1302读取月数据
 143   1          dtime[4][0]=(TIME.MONTH>>4)+0x30;    //十位  
 144   1        dtime[4][1]=(TIME.MONTH&0x0F)+0x30;  //个位
 145   1      
 146   1        TIME.DAY  = DS1302_Rdata(0x8b);    //从DS1302读取星期数据
 147   1          dtime[5][0]=(TIME.DAY>>4)+0x30;      //十位  
 148   1        dtime[5][1]=(TIME.DAY&0x0F)+0x30;    //个位
 149   1      
 150   1        TIME.YEAR = DS1302_Rdata(0x8d);    //从DS1302读取年数据
 151   1          dtime[6][0]=(TIME.YEAR>>4)+0x30;     //十位  
 152   1        dtime[6][1]=(TIME.YEAR&0x0F)+0x30;   //个位
 153   1      }
 154           /*
 155              GetDS1302(); //更新时钟数据
 156              chs[0]= dtime[2][0]; //时十位
 157              chs[1]= dtime[2][1]; //时个位
 158              chs[2]=':';
 159              chs[3]= dtime[1][0]; //分十位
 160              chs[4]= dtime[1][1]; //分十位
 161              chs[5]=':';
 162              chs[6]= dtime[0][0]; //分十位
 163              chs[7]= dtime[0][1]; //分十位
 164              chs[8]=0;      //结尾
 165              Hanzi_Disp(1,0,chs);
 166           */
 167          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    345    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     21    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   DS1302                                                            04/21/2023 17:04:01 PAGE 4   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
