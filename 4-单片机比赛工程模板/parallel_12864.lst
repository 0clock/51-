C51 COMPILER V9.60.7.0   PARALLEL_12864                                                    04/21/2023 17:04:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PARALLEL_12864
OBJECT MODULE PLACED IN .\OBJ\parallel_12864.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Library\src\parallel_12864.c LARGE OMF2 WARNINGLEVEL(1) OPTIMIZE(8,SPEED
                    -) BROWSE INCDIR(.\Library\inc;.\USER) PRINT(.\parallel_12864.lst) TABS(2) OBJECT(.\OBJ\parallel_12864.obj)

line level    source

   1          /*********************************************************************************************************
   2          ** ÎÄ¼þ¹¦ÄÜ £º12864Òº¾§²¢ÐÐÇý¶¯³ÌÐò
   3          ** ×¢ÒâÊÂÏî £ºÓ²¼þ²¿·ÖÐèÒª½«12864µÄµÚ15¸ö¹Ü½ÅÍ¨¹ýµç×è½Óµ½¸ßµçÆ½
   4          ** ¹¤³Ì×÷Õß £ºBlue Sky Teams¡ª¡ªZZL
   5          ** ¹¤³Ì°æ±¾ £ºV1.0
   6          *********************************************************************************************************/
   7          
   8           #include "parallel_12864.h"
   9          
  10          
  11          
  12          uchar code addr_tab[32] = {
  13          0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,//µÚÒ»ÐÐºº×ÖÎ»ÖÃ
  14          0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,//µÚ¶þÐÐºº×ÖÎ»ÖÃ
  15          0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,//µÚÈýÐÐºº×ÖÎ»ÖÃ
  16          0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,//µÚËÄÐÐºº×ÖÎ»ÖÃ
  17          
  18          };
  19          
  20          /*********************************************************************************************************
  21          ** º¯ÊýÃû³Æ £ºvoid Check_12864_Busy(void)
  22          ** º¯Êý¹¦ÄÜ £º¶ÁÃ¦Âµ×´Ì¬
  23          ** º¯ÊýËµÃ÷ £ºÈô12864´¦ÓÚÃ¦Âµ£¬µÈ´ýÖ±µ½¿ÕÏÐ×´Ì¬
  24          ** Èë¿Ú²ÎÊý £ºÎÞ
  25          ** ³ö¿Ú²ÎÊý £ºÎÞ
  26          *********************************************************************************************************/
  27          void Check_12864_Busy(void)
  28          {
  29   1        uchar flag = 0 , i;
  30   1        DATA_PORT = 0XFF;
  31   1        RS = 0;
  32   1        RW = 1;
  33   1        while(flag == 0)
  34   1        {
  35   2          for(i = 0;i ++;i< 10)
  36   2          {
  37   3            Delay_Us(1);    
  38   3          }
  39   2          CE = 1;
  40   2          for(i = 0;i ++;i < 10)
  41   2          {
  42   3            Delay_Us(1);    
  43   3          }
  44   2          if(DATA_PORT & 0X80)flag = 0;
  45   2          else flag = 1;
  46   2          for(i = 0;i ++ ;i < 10)
  47   2          {
  48   3            Delay_Us(1);    
  49   3          }
  50   2          CE = 0;
  51   2        }   
  52   1      }
  53          /*********************************************************************************************************
  54          ** º¯ÊýÃû³Æ £ºWrite_12864_Data(uchar date)
C51 COMPILER V9.60.7.0   PARALLEL_12864                                                    04/21/2023 17:04:02 PAGE 2   

  55          ** º¯Êý¹¦ÄÜ £ºÐ´Êý¾Ý
  56          ** º¯ÊýËµÃ÷ £º
  57          ** Èë¿Ú²ÎÊý £º´ýÐ´ÈëÊý¾Ý
  58          ** ³ö¿Ú²ÎÊý £ºÎÞ
  59          *********************************************************************************************************/
  60          void Write_12864_Data(uchar date)//Ð´Êý¾Ý
  61          {
  62   1        uchar i;
  63   1        Check_12864_Busy();
  64   1        RS = 1;
  65   1        RW = 0;
  66   1        for(i = 0;i ++;i < 4)
  67   1        {
  68   2          Delay_Us(1);    
  69   2        }
  70   1        CE = 1;
  71   1        for(i = 0;i ++ ;i < 4)
  72   1        {
  73   2          Delay_Us(1);    
  74   2        }
  75   1        DATA_PORT = date;
  76   1        for(i = 0;i ++;i < 4)
  77   1        {
  78   2          Delay_Us(1);    
  79   2        }
  80   1        CE = 0;
  81   1      }
  82          /*********************************************************************************************************
  83          ** º¯ÊýÃû³Æ £ºuchar Read_12864_Data(void)
  84          ** º¯Êý¹¦ÄÜ £º¶ÁÊý¾Ý
  85          ** º¯ÊýËµÃ÷ £º
  86          ** Èë¿Ú²ÎÊý £ºÎÞ
  87          ** ³ö¿Ú²ÎÊý £º´ý¶Á³öÊý¾Ý
  88          *********************************************************************************************************/
  89          uchar Read_12864_Data(void)//¶ÁÊý¾Ý
  90          {
  91   1        uchar date,i;
  92   1        Check_12864_Busy();
  93   1        DATA_PORT = 0XFF;
  94   1        RS = 1;
  95   1        Delay_Us(1);
  96   1        date = DATA_PORT;
  97   1        RW = 1;
  98   1        for(i = 0;i ++ ;i < 10)
  99   1        {
 100   2          Delay_Us(1);    
 101   2        }
 102   1        CE = 1;
 103   1        for(i = 0;i ++;i < 10)
 104   1        {
 105   2          Delay_Us(1);    
 106   2        }
 107   1        date = DATA_PORT;
 108   1        CE = 0;   
 109   1        return(date);   
 110   1      }
 111          /*********************************************************************************************************
 112          ** º¯Êý¹¦ÄÜ £º¶ÁÊý¾Ý
 113          ** º¯ÊýËµÃ÷ £º
 114          ** Èë¿Ú²ÎÊý £º´ýÐ´ÈëµÄÖ¸Áî
 115          ** ³ö¿Ú²ÎÊý £ºÎÞ
 116          *********************************************************************************************************/
C51 COMPILER V9.60.7.0   PARALLEL_12864                                                    04/21/2023 17:04:02 PAGE 3   

 117          void Write_12864_Com(uchar commod)//Ð´Ö¸Áî
 118          {
 119   1        uchar i;
 120   1        Check_12864_Busy();
 121   1        RS = 0;
 122   1        RW = 0;
 123   1        for(i = 0;i ++;i < 4)
 124   1        {
 125   2          Delay_Us(1);    
 126   2        }
 127   1        CE = 1;
 128   1        for(i = 0;i ++;i < 4)
 129   1        {
 130   2          Delay_Us(1);    
 131   2        }
 132   1        DATA_PORT = commod;
 133   1        for(i = 0;i ++;i < 4)
 134   1        {
 135   2          Delay_Us(1);    
 136   2        }
 137   1        CE = 0;
 138   1      }
 139          /*********************************************************************************************************
 140          ** º¯Êý¹¦ÄÜ £º12864Òº¾§³õÊ¼»¯³ÌÐò
 141          ** º¯ÊýËµÃ÷ £º
 142          ** Èë¿Ú²ÎÊý £ºÎÞ
 143          ** ³ö¿Ú²ÎÊý £ºÎÞ
 144          *********************************************************************************************************/
 145          
 146          void LCD_12864_Init(void) 
 147          { 
 148   1        PSB=1;             //ÉèÖÃÎª8BIT²¢¿Ú¹¤×÷Ä£Ê½
 149   1        RES=0;             //¸´Î»
 150   1        Delay_Us(200);
 151   1        RES=1;             //¹Ø¸´Î»
 152   1        Write_12864_Com(basic_commod);//30H--»ù±¾Ö¸Áî²Ù×÷ 
 153   1        Write_12864_Com(cursor_off);//0x06¿ªÏÔÊ¾£¬¹Ø¹â±ê£¬²»ÉÁË¸¡£ À©Õ¹
 154   1        Write_12864_Com(clear);//Çå³ýÏÔÊ¾0x01 
 155   1        Write_12864_Com(0x06);//Ö¸¶¨ÔÚ×ÊÁÏÐ´Èë»ò¶ÁÈ¡Ê±£¬¹â±êµÄÒÆ¶¯·½Ïò£¬DDRAMµÄµØÖ·¼ÆÊýÆ÷£¨AC£©¼Ó1¡£ 
 156   1      
 157   1      } 
 158          
 159          /*********************************************************************************************************
 160          ** º¯Êý¹¦ÄÜ £ºÏòÒº¾§Á¬ÐøÐ´ÈëÒ»¶Î×Ö·û´®
 161          ** º¯ÊýËµÃ÷ £º×Ö·û¿ÉÒÔÊÇÈÎºÎ×Ö·û£¬°üÀ¨ºº×Ö£¬µ«ÊÇºº×Ö±ØÐëÊÇÐ´ÔÚÒ»¸öÁ¬ÐøµÄ16*16µÄµãÕóÖÐ
 162          ** º¯Êý¾ÙÀý £ºWrite_12864_String("LCD12864Òº¾§ÊµÑé")£¬Õâ¶Î×Ö·û´®ÓÐ8¸öÓ¢ÎÄ×Ö·û£¬×Ü¹²Õ¼4¸ö16*16µÄµãÕó£¬ºóÃæµ
             -ÄËÄ¸öÍ¬ÑùÕ¼4¸ö16*16µÄµãÕó
 163          ** ´íÎó¾ÙÀý £ºWrite_12864_String("LCDÒº¾§ÏÔÊ¾"),Ç°ÃæµÄÈý¸ö×Ö·ûÕ¼ÁËÒ»¸ö°ëµÄ16*16µ¥ÔªµÄµãÕó£¬»áµ¼ÖÂºóÃæµÄºº×
             -ÖÃ»·¨Õý³£ÏÔÊ¾
 164          ** Èë¿Ú²ÎÊý £º´ýÐ´ÈëµÄ×Ö·û´®
 165          ** ³ö¿Ú²ÎÊý £ºÎÞ
 166          *********************************************************************************************************/
 167          void Write_12864_String(uchar *str)//Ð´Èë×Ö·û´®»òÕßºº×Ö
 168          {
 169   1        uchar *p;
 170   1        p = str;
 171   1        while(*p != 0)
 172   1        {
 173   2          Write_12864_Data(*p);
 174   2          p = ++str;
 175   2        } 
 176   1      }
C51 COMPILER V9.60.7.0   PARALLEL_12864                                                    04/21/2023 17:04:02 PAGE 4   

 177          
 178          /*********************************************************************************************************
 179          ** º¯Êý¹¦ÄÜ £ºÔÚÖ¸¶¨Î»ÖÃÐ´Èëºº×Ö
 180          ** º¯ÊýËµÃ÷ £ººº×Ö±ØÐëÊÇÐ´ÔÚÒ»¸öÁ¬ÐøµÄ16*16µÄµãÕóÖÐ
 181          ** Èë¿Ú²ÎÊý £º´ýÐ´ÈëµÄºº×Ö
 182          ** º¯Êý¾ÙÀý £ºHanzi_Disp("Òº¾§ÊµÑé")
 183          ** ³ö¿Ú²ÎÊý £ºÎÞ
 184          *********************************************************************************************************/
 185          void Hanzi_Disp(uchar x,uchar y,uchar *s)
 186          { 
 187   1        Write_12864_Com(addr_tab[8 * x + y]);  //Ð´µØÖ·
 188   1        while(*s > 0)
 189   1           { 
 190   2            Write_12864_Data(*s);    //Ð´Êý¾Ý
 191   2            s ++;     
 192   2           }
 193   1      }
 194          /*********************************************************************************************************
 195          ** º¯Êý¹¦ÄÜ £ºÔÚÖ¸¶¨Î»ÖÃÐ´Ò»¸öÕûÊý
 196          ** º¯ÊýËµÃ÷ £ºÕûÊýµÄ·¶Î§´Ó0µ½65535
 197          ** Èë¿Ú²ÎÊý £º´ýÐ´ÈëµÄÕûÊý
 198          ** ³ö¿Ú²ÎÊý £ºÎÞ
 199          *********************************************************************************************************/
 200          void Num_Display(uchar x,uchar y,uint number)
 201          {
 202   1        uint i = 10000;
 203   1        Write_12864_Com(addr_tab[8 * x + y]);  //Ð´µØÖ·
 204   1        if( number !=0)
 205   1        {
 206   2          while(number / i == 0)
 207   2          {
 208   3            i /= 10;
 209   3          }
 210   2      
 211   2          if(i != 1)
 212   2          {
 213   3            while(number/i != 0)
 214   3            {
 215   4              Write_12864_Data(number / i + 0x30);
 216   4              number -= (number / i) * i; 
 217   4              i /= 10;  
 218   4              if(i == 1)break;
 219   4            }   
 220   3          } 
 221   2        }
 222   1        Write_12864_Data(number%10+0x30);
 223   1      }
 224          /*********************************************************************************************************
 225          ** º¯Êý¹¦ÄÜ £ºÔÚÆÁÄ»ÉÏÏÔÊ¾Ò»¸±Í¼Æ¬
 226          ** º¯ÊýËµÃ÷ £º¿ÉÒÔÓÐ°ëÆÁÏÔÊ¾ºÍÈ«ÆÁÏÔÊ¾Á½ÖÖÄ£Ê½£¬¿ÉÒÔ×ÔÐÐÐÞ¸Ä
 227          ** »­Í¼·½Ê½Îª´Ó×óµ½ÓÒÉ¨Ãè£¬´ÓÉÏµ½ÏÂ£¬Ã¿Ð´Ò»¸ö×Ö½ÚºóÐÐµØÖ·¼ÓÒ»£¬Ã¿Ð´Íæ16¸ö×Ö½Ú£¬¼´128¸öµã£¨Èç¹û°ëÆÁÏÔÊ¾8¸ö×
             -Ö½Ú£¬64¸öµã£©ÁÐµØÖ·¼ÓÒ»
 228          ** µãÕóÈ¡µã·½Ê½Îª´Ó×óµ½ÓÒ£¬´ÓÉÏµ½ÏÂ£¬¸ßÎ»ÔÚÇ°£¬µÍÎªÔÚºó
 229          ** Èë¿Ú²ÎÊý £º»æ»­µÄÍ¼Æ¬µÄÊ×µØÖ·
 230          ** ³ö¿Ú²ÎÊý £ºÎÞ
 231          *********************************************************************************************************/
 232          void PHO_Display(const unsigned char *s) 
 233          { 
 234   1        uchar COUNT3 = 0X02,COUNT1,COUNT2,LCD_X = 0X80,LCD_Y;
 235   1           
 236   1        for (;COUNT3 != 0;COUNT3 --) 
 237   1        { 
C51 COMPILER V9.60.7.0   PARALLEL_12864                                                    04/21/2023 17:04:02 PAGE 5   

 238   2          LCD_Y = 0X80; //ÉÏ°ëÆÁ
 239   2          COUNT2 = 0X20;//32 
 240   2          for(;COUNT2 != 0;COUNT2 --) 
 241   2          { 
 242   3        //    COUNT1 = 0X10;//8¸ö16*16µãÕóµ¥Ôª ÏÔÊ¾È«ÆÁ   
 243   3            COUNT1 = 0X08;//4¸ö16*16µãÕóµ¥Ôª ÏÔÊ¾°ëÆÁ »ªÊ¦logo
 244   3            Write_12864_Com(0x34); 
 245   3            Write_12864_Com(LCD_Y); 
 246   3            Write_12864_Com(LCD_X); 
 247   3            Write_12864_Com(0x30); 
 248   3            for (;COUNT1 != 0;COUNT1 --) 
 249   3            { 
 250   4              Write_12864_Data(*s ++);    
 251   4            } 
 252   3            LCD_Y += 1; 
 253   3          } 
 254   2          LCD_X = 0X88; //ÏÂ°ëÆÁ
 255   2        } 
 256   1        Write_12864_Com(0x36); 
 257   1        Write_12864_Com(0x30); 
 258   1      }
 259          /*ÁíÍâÒ»ÖÖ´òµã»­Í¼³ÌÐò*/
 260          void img_displeft(const unsigned char *img)  //  ×¢Òâ0---31£¬0---31ÉÏÏÂ·Ö°ë
 261          {
 262   1          unsigned char i,j,m,n;
 263   1        for(j = 0;j < 32;j ++)
 264   1           {
 265   2             for(i = 0;i < 4;i ++)
 266   2             {
 267   3               Write_12864_Com(0x34); //À©Õ¹Ö¸Áî£¬ÏÔÊ¾»æÍ¼
 268   3               Write_12864_Com(0x80 + j); //¸üÐÂ×ø±ê
 269   3               Write_12864_Com(0x80 + i);
 270   3               Write_12864_Com(0x30); //»ù±¾Ö¸Áî¼¯
 271   3               Write_12864_Data(img[j * 8 + i *2 ]);  //¸ß×Ö½Ú
 272   3               Write_12864_Data(img[j * 8 + i * 2 + 1]); //µÍ×Ö½Ú
 273   3             }
 274   2           }  
 275   1        for(n = 0;n < 32;n ++)
 276   1           {
 277   2             for(m = 0;m < 4;m ++)
 278   2             {
 279   3               Write_12864_Com(0x34); //À©Õ¹Ö¸Áî£¬ÏÔÊ¾»æÍ¼
 280   3               Write_12864_Com(0x80 + n); //¸üÐÂ×ø±ê
 281   3               Write_12864_Com(0x88 + m);
 282   3               Write_12864_Com(0x30); //»ù±¾Ö¸Áî¼¯
 283   3               Write_12864_Data(img[n * 8 + 256 + m * 2]);  //¸ß×Ö½Ú
 284   3               Write_12864_Data(img[n * 8 + 256 + m * 2 + 1]); //µÍ×Ö½Ú
 285   3             }
 286   2           }
 287   1           Write_12864_Com(0x36); //À©³ä¹¦ÄÜÖ¸Áî£¬¿ª»æÍ¼¿ª¹Ø¡£
 288   1      } 
 289          /*********************************************************************************************************
 290          ** º¯Êý¹¦ÄÜ £ºÇå³ý12864ÄÚ²¿µÄCGRAM
 291          ** º¯ÊýËµÃ÷ £ºµ±ÆÁÄ»Ö®Ç°Í¨¹ýCGRAM»æÍ¼£¬¿ÉÒÔµ÷ÓÃ´Ëº¯ÊýÀ´Çå³ýCGRAMÖÐµÄÄÚÈÝ
 292          ** Èë¿Ú²ÎÊý £ºÎÞ
 293          ** ³ö¿Ú²ÎÊý £ºÎÞ
 294          *********************************************************************************************************/
 295          void Clear_12864(void)
 296          {
 297   1        uchar COUNT3 = 0X02,COUNT1,COUNT2,LCD_X = 0X80,LCD_Y;
 298   1           
 299   1        for (;COUNT3 != 0;COUNT3 --) 
C51 COMPILER V9.60.7.0   PARALLEL_12864                                                    04/21/2023 17:04:02 PAGE 6   

 300   1        { 
 301   2          LCD_Y = 0X80; 
 302   2          COUNT2 = 0X20;//32 
 303   2          for(;COUNT2 != 0;COUNT2 --) 
 304   2          { 
 305   3            COUNT1 = 0X10;//16 
 306   3            Write_12864_Com(0x34); 
 307   3            Write_12864_Com(LCD_Y); 
 308   3            Write_12864_Com(LCD_X); 
 309   3            Write_12864_Com(0x30); 
 310   3            for (;COUNT1 != 0;COUNT1 --) 
 311   3            { 
 312   4              Write_12864_Data(0x00);     
 313   4            } 
 314   3            LCD_Y += 1; 
 315   3          } 
 316   2          LCD_X = 0X88; 
 317   2        } 
 318   1        Write_12864_Com(0x36); 
 319   1        Write_12864_Com(0x30);  
 320   1      }
 321          /*********************************************************************************************************
 322          ** º¯Êý¹¦ÄÜ £ºÔÚÆÁÄ»ÉÏ´òÉÏÒ»¸öµã£¬ÆÁÄ»ÏñËØÊÇ128*64
 323          ** º¯ÊýËµÃ÷ £º´òµã·¶Î§²»Òª³¬¹ý×ø±ê·¶Î§£¬Õâ¸öº¯ÊýÓÃÀ´ÎªºóÃæµÄ»­Ö±ÏßºÍÆäËûº¯Êý·þÎñ
 324          ** Èë¿Ú²ÎÊý £º´ýÐ´ÈëµÄÕûÊý
 325          ** ³ö¿Ú²ÎÊý £ºÎÞ
 326          *********************************************************************************************************/
 327          void Set_12864_Point(uchar x,uchar y)
 328          {
 329   1        uchar x_byte,x_bit,y_byte,y_bit;
 330   1        uchar date1,date2;//´æ´¢¶Á»ØµÄÊý¾Ý
 331   1        x &= 0x7F;//ÏÞÖÆÔÚÒº¾§ÆÁÄ»µÄ·¶Î§ÄÚ
 332   1        y &= 0x3F;
 333   1      
 334   1        x_byte = x / 16;//Ëã³öÔÚÄÇ¸ö×Ö½Ú
 335   1        x_bit = x & 0x0f; //Ëã³öÊÇÄÄÒ»Î»
 336   1      
 337   1        y_byte = y / 32;
 338   1        y_bit = y & 0x3f;
 339   1      
 340   1        Write_12864_Com(extern_commod); 
 341   1        Write_12864_Com(0x80 + y_bit);
 342   1        Write_12864_Com(0x80 + x_byte + 8 * y_byte);
 343   1      
 344   1        Read_12864_Data();//ÏÈ¿Õ¶ÁÒ»´Î£¿²»ÖªµÀÎªÊ²Ã´
 345   1        date1=Read_12864_Data();
 346   1        date2=Read_12864_Data();
 347   1        Write_12864_Com(extern_commod);
 348   1        Write_12864_Com(0x80 + y_bit);
 349   1        Write_12864_Com(0x80 + x_byte + 8 * y_byte);
 350   1        if(x_bit < 8)
 351   1        {
 352   2          Write_12864_Data(date1 | (0x01 << (7-x_bit) ) );
 353   2          Write_12864_Data(date2);
 354   2        }
 355   1        else 
 356   1        {
 357   2          Write_12864_Data(date1);  
 358   2          Write_12864_Data(date2 | (0x01 << (15-x_bit) ) );
 359   2        }
 360   1        Write_12864_Com(draw_on);
 361   1        Write_12864_Com(basic_commod);  
C51 COMPILER V9.60.7.0   PARALLEL_12864                                                    04/21/2023 17:04:02 PAGE 7   

 362   1      }
 363          /*********************************************************************************************************
 364          ** º¯ÊýÃû³Æ £ºvoid LCD_12864_DrawLine(uint x1, uint y1, uint x2, uint y2)
 365          ** º¯Êý¹¦ÄÜ £ºÔÚ12864ÆÁÄ»ÉÏ»­Ò»ÌõÖ±Ïß
 366          ** º¯ÊýËµÃ÷ £ºÒò·Ö±æÂÊ½ÏµÍ£¬Ð±Ïß²¢²»ÍêÃÀ
 367          ** Èë¿Ú²ÎÊý £ºx1:Æðµãºá×ø±ê
 368                  y1:Æðµã×Ý×ø±ê
 369                  x2:ÖÕµãºá×ø±ê      
 370                  y2:ÖÕµã×Ý×ø±ê
 371          ** ³ö¿Ú²ÎÊý £ºµ±Ç°µÄ¼üÅÌÖµ
 372          *********************************************************************************************************/
 373          void LCD_12864_DrawLine(uint x1, uint y1, uint x2, uint y2)
 374          {
 375   1        uint t; 
 376   1        int xerr = 0,yerr = 0,delta_x,delta_y,distance; 
 377   1        int incx,incy,uRow,uCol; 
 378   1      
 379   1        delta_x = x2-x1; //¼ÆËã×ø±êÔöÁ¿ 
 380   1        delta_y = y2-y1; 
 381   1        uRow = x1; 
 382   1        uCol = y1; 
 383   1        if(delta_x > 0)incx = 1; //ÉèÖÃµ¥²½·½Ïò 
 384   1        else if(delta_x == 0)incx = 0;//´¹Ö±Ïß 
 385   1        else {incx = -1;delta_x = - delta_x;} 
 386   1        if(delta_y > 0)incy = 1; 
 387   1        else if(delta_y == 0)incy = 0;//Ë®Æ½Ïß 
 388   1        else{incy = -1;delta_y = -delta_y;} 
 389   1        if( delta_x > delta_y)distance = delta_x; //Ñ¡È¡»ù±¾ÔöÁ¿×ø±êÖá 
 390   1        else distance = delta_y; 
 391   1        for(t = 0;t <= distance + 1;t ++ )//»­ÏßÊä³ö 
 392   1        {  
 393   2          Set_12864_Point(uRow,uCol);//»­µã 
 394   2          xerr += delta_x ; 
 395   2          yerr += delta_y ; 
 396   2          if(xerr > distance) 
 397   2          { 
 398   3            xerr -= distance; 
 399   3            uRow += incx; 
 400   3          } 
 401   2          if(yerr > distance) 
 402   2          { 
 403   3            yerr -= distance; 
 404   3            uCol += incy; 
 405   3          } 
 406   2        }  
 407   1      }    
 408          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2007    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----      72
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   PARALLEL_12864                                                    04/21/2023 17:04:02 PAGE 8   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
