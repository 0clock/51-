/*********************************************************************************************************
** 文件功能 ：12864液晶并行驱动程序
** 注意事项 ：硬件部分需要将12864的第15个管脚通过电阻接到高电平
** 工程作者 ：Blue Sky Teams――ZZL
** 工程版本 ：V1.0
*********************************************************************************************************/
#ifndef _LCD12864_H_
#define _LCD12864_H_

  #ifndef uchar
	#define uchar unsigned char
  #endif

  #ifndef uint
	#define uint  unsigned int
  #endif

#include"intrins.h"
#include "STC12C5A60S2.H" 
/*********************************************************************************************************
**            CE----------P0^5	  OUT
**			  RW----------P0^6	  OUT
**            RS----------P0^7	  OUT
**            date--------P2 1~7  IN/OUT
***************************************液晶管脚接口定义*******************************************************/
sbit	 CE     	=P2^3;	//锁存控制
sbit	 RW     	=P2^4;	//读写口
sbit	 RS	    	=P2^5;	//命令/数据选择

sbit RES = P2^0; //复位
sbit PSB = P2^2; //串并选择

#define  DATA_PORT	P0


#define basic_commod  0x30
#define extern_commod 0x34
#define cursor_on	  0x0f
#define cursor_off	  0x0c
#define clear 		  0x01
#define draw_on		  0x36
#define draw_off	  0x34


extern uchar code addr_tab[32];

 /*********************************************************************************************************
** 函数功能 ：延时函数
** 函数说明 ：利用软件延时，占用CPU，经调试最小单位大约为1us
** 入口参数 ：time:需要延时的时间，单位us
** 出口参数 ：无
*********************************************************************************************************/							   
extern void Delay_Us(uchar n);


/*********************************************************************************************************
** 函数名称 ：void Check_12864_Busy(void)
** 函数功能 ：读忙碌状态
** 函数说明 ：若12864处于忙碌，等待直到空闲状态
** 入口参数 ：无
** 出口参数 ：无
*********************************************************************************************************/
extern void Check_12864_Busy(void);

/*********************************************************************************************************
** 函数名称 ：Write_12864_Data(uchar date)
** 函数功能 ：写数据
** 函数说明 ：
** 入口参数 ：待写入数据
** 出口参数 ：无
*********************************************************************************************************/
extern void Write_12864_Data(uchar date);//写数据

/*********************************************************************************************************
** 函数名称 ：uchar Read_12864_Data(void)
** 函数功能 ：读数据
** 函数说明 ：
** 入口参数 ：无
** 出口参数 ：待读出数据
*********************************************************************************************************/
extern uchar Read_12864_Data(void);//读数据

/*********************************************************************************************************
** 函数功能 ：读数据
** 函数说明 ：
** 入口参数 ：待写入的指令
** 出口参数 ：无
*********************************************************************************************************/
extern void Write_12864_Com(uchar commod);//写指令

/*********************************************************************************************************
** 函数功能 ：12864液晶初始化程序
** 函数说明 ：
** 入口参数 ：无
** 出口参数 ：无
*********************************************************************************************************/
extern void LCD_12864_Init(void);


/*********************************************************************************************************
** 函数功能 ：向液晶连续写入一段字符串
** 函数说明 ：字符可以是任何字符，包括汉字，但是汉字必须是写在一个连续的16*16的点阵中
** 函数举例 ：Write_12864_String("LCD12864液晶实验")，这段字符串有8个英文字符，总共占4个16*16的点阵，后面的四个同样占4个16*16的点阵
** 错误举例 ：Write_12864_String("LCD液晶显示"),前面的三个字符占了一个半的16*16单元的点阵，会导致后面的汉字没法正常显示
** 入口参数 ：待写入的字符串
** 出口参数 ：无
*********************************************************************************************************/
extern void Write_12864_String(uchar *str);//写入字符串或者汉字


/*********************************************************************************************************
** 函数功能 ：在指定位置写入汉字
** 函数说明 ：汉字必须是写在一个连续的16*16的点阵中
** 入口参数 ：待写入的汉字
** 函数举例 ：Hanzi_Disp("液晶实验")
** 出口参数 ：无
*********************************************************************************************************/
extern void Hanzi_Disp(uchar x,uchar y,uchar *s);

/*********************************************************************************************************
** 函数功能 ：在指定位置写一个整数
** 函数说明 ：整数的范围从0到65535
** 入口参数 ：待写入的整数
** 出口参数 ：无
*********************************************************************************************************/
extern void Num_Display(uchar x,uchar y,uint number);

/*********************************************************************************************************
** 函数功能 ：在屏幕上显示一副图片
** 函数说明 ：可以有半屏显示和全屏显示两种模式，可以自行修改
** 画图方式为从左到右扫描，从上到下，每写一个字节后行地址加一，每写玩16个字节，即128个点（如果半屏显示8个字节，64个点）列地址加一
** 点阵取点方式为从左到右，从上到下，高位在前，低为在后
** 入口参数 ：绘画的图片的首地址
** 出口参数 ：无
*********************************************************************************************************/
extern void PHO_Display(const unsigned char *s);

/*********************************************************************************************************
** 函数功能 ：清除12864内部的CGRAM
** 函数说明 ：当屏幕之前通过CGRAM绘图，可以调用此函数来清除CGRAM中的内容
** 入口参数 ：无
** 出口参数 ：无
*********************************************************************************************************/
extern void Clear_12864(void);


/*********************************************************************************************************
** 函数功能 ：在屏幕上打上一个点，屏幕像素是128*64
** 函数说明 ：打点范围不要超过坐标范围，这个函数用来为后面的画直线和其他函数服务
** 入口参数 ：待写入的整数
** 出口参数 ：无
*********************************************************************************************************/
extern void Set_12864_Point(uchar x,uchar y);


/*********************************************************************************************************
** 函数名称 ：void LCD_12864_DrawLine(uint x1, uint y1, uint x2, uint y2)
** 函数功能 ：在12864屏幕上画一条直线
** 函数说明 ：因分辨率较低，斜线并不完美
** 入口参数 ：x1:起点横坐标
			  y1:起点纵坐标
			  x2:终点横坐标		   
			  y2:终点纵坐标
*********************************************************************************************************/
extern void LCD_12864_DrawLine(uint x1, uint y1, uint x2, uint y2);
 	 

#endif

/*
void main()
{
	LCD_12864_Init();
	Clear_12864();
	PHO_Display(huashi);
	Write_12864_Com(0x84);
	Write_12864_String("Blue_Sky");
	Write_12864_Com(0x94);
	Write_12864_String(" I LIKE");
	Write_12864_Com(0x8d);
	Write_12864_String(" MCU");
	Write_12864_Com(0x9c);
	Write_12864_String("12年03月");
	while(1);
}
*/


